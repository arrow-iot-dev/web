{"version":3,"sources":["components/Home.js","components/Logs.js","components/Setting.js","hooks/useBle.js","App.js","reportWebVitals.js","index.js"],"names":["Home","distance","time","state","timer","useMemo","style","styles","container","distanceWrap","label","toFixed","unit","display","flexDirection","flex","padding","title","fontSize","alignItems","justifyContent","marginTop","marginBottom","FlatList","data","keyExtractor","renderItem","map","item","index","key","Logs","clearLogs","onClick","window","confirm","text","log","join","content","encodedUri","encodeURI","open","listItem","th","number","toString","sTime","paddingBottom","paddingTop","fontWeight","divAlign","Setting","alarmTime","setAlarmTime","onSaveAlarmTime","type","input","value","onChange","e","newTime","target","button","margin","textAlign","width","serviceUUID","characteristicUUID","bleName","useBle","useState","isConnected","setIsConnected","setDistance","setTime","logs","setLogs","setState","useEffect","savedLogs","localStorage","getItem","oldLogs","JSON","parse","useCallback","removeItem","scanAndConnect","navigator","bluetooth","requestDevice","filters","name","optionalServices","then","device","console","addEventListener","event","gatt","connect","server","connected","getPrimaryService","service","getCharacteristic","characteristic","startNotifications","TextDecoder","decode","split","distanceInch","timeN","stateN","prevLogs","newLogs","setItem","stringify","catch","error","aTime","encoder","TextEncoder","writeValue","encode","alert","App","tabKey","setTabKey","tabs","home","component","props","setting","Comp","status","scanningdiv","tab","borderRightWidth","borderRightColor","activeLabel","inactiveLabel","minHeight","backgroundColor","height","position","letf","right","bottom","borderTop","color","scanningText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bfd8a79.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\n\nconst Home = ({ distance = 0, time = 0, state = 0 }) => {\n\tconst timer = useMemo(() => {\n\t\tconst sTime = time / 1000\n\t\t// const s = (sTime % 60).toString().padStart(2, '0')\n\t\t// const m = Math.floor(sTime / 60).toString().padStart(2, '0')\n\t\t// return `${m}:${s}`\n\t\treturn `${sTime}`\n\t}, [time])\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.distanceWrap}>\n\t\t\t\t<div style={styles.label}>Distance</div>\n\t\t\t\t<div style={styles.distance}>{(distance || 0).toFixed(2)}</div>\n\t\t\t\t<div style={styles.unit}>Inches</div>\n\t\t\t\t{\n\t\t\t\t\tstate > 0 && (\n\t\t\t\t\t\t<div style={styles.timer}>Timer: {timer}s</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Home\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\tpadding: 15,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tdistanceWrap: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tlabel: {\n\t\tfontSize: 30,\n\t},\n\tdistance: {\n\t\tfontSize: 100\n\t},\n\tunit: {\n\t\tfontSize: 30,\n\t},\n\ttimer: {\n\t\tmarginTop: 30,\n\t\tfontSize: 35,\n\t\tmarginBottom: 30,\n\t}\n};\n","import React from 'react'\n\nconst FlatList = ({ data, keyExtractor, renderItem}) => {\n\treturn (\n\t\t<div>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tconst key = keyExtractor(item, index)\n\t\t\t\treturn (\n\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t{renderItem({ item, index })}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nconst Logs = ({ data = [], clearLogs }) => {\n\tconst onClear = () => {\n\t\tconst answer = window.confirm('Are you sure to clear all logs')\n\t\tif (answer) {\n\t\t\tclearLogs()\n\t\t}\n\t}\n\tconst onExport = () => {\n\t\tconst columns = 'No.,Distance(in.),Time(sec.)'\n\t\tconst text = [columns, ...data.map((log, index) => `${index + 1},${(log.distance || 0).toFixed(2)},${log.time / 1000}`)].join('\\n')\n\t\tconst content = `data:text/csv;charset=utf-8,${text}`\n\t\tconst encodedUri = encodeURI(content)\n\t\twindow.open(encodedUri)\n\t}\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t<button onClick={onClear}>Clear</button>\n\t\t\t\t<button onClick={onExport}>Export</button>\n\t\t\t</div>\n\t\t\t<div style={styles.listItem}>\n\t\t\t\t<div style={{...styles.th, ...styles.number}}>No.</div>\n\t\t\t\t<div style={{...styles.th, ...styles.distance}}>Distance (in.)</div>\n\t\t\t\t<div style={{...styles.th, ...styles.time}}>Time (sec.)</div>\n\t\t\t</div>\n\t\t\t<FlatList\n\t\t\t\tdata={data}\n\t\t\t\tkeyExtractor={(item, index) => index.toString()}\n\t\t\t\trenderItem={({ item, index }) => {\n\t\t\t\t\tconst sTime = item.time / 1000\n\t\t\t\t\t// const s = (sTime % 60).toString().padStart(2, '0')\n\t\t\t\t\t// const m = Math.floor(sTime / 60).toString().padStart(2, '0')\n\t\t\t\t\t// const timer = `${m}:${s}`\n\t\t\t\t\tconst timer = `${sTime}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div style={styles.listItem}>\n\t\t\t\t\t\t\t<div style={styles.number}>#{index + 1}</div>\n\t\t\t\t\t\t\t<div style={styles.distance}>{(item.distance || 0).toFixed(2)}</div>\n\t\t\t\t\t\t\t<div style={styles.time}>{timer}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Logs\n\nconst styles = {\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 15,\n    paddingBottom: 100,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tlistItem: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tpaddingTop: 5,\n\t\tpaddingBottom: 5,\n\t},\n\tth: {\n\t\tfontWeight: 'bold'\n\t},\n\tnumber: {\n\t\tflex: 1,\n\t\tfontSize: 20,\n\t},\n\tdistance: {\n\t\tflex: 3,\n\t\tdivAlign: 'right',\n\t\tfontSize: 20,\n\t},\n\ttime: {\n\t\tflex: 3,\n\t\tdivAlign: 'right',\n\t\tfontSize: 20,\n\t},\n}\n","import React, { useMemo } from 'react'\n\nconst Setting = ({ alarmTime, setAlarmTime, onSaveAlarmTime }) => {\n  const time = useMemo(() => {\n    return alarmTime / 1000\n  }, [alarmTime])\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.distanceWrap}>\n        <div style={styles.label}>Set Alarm Time (sec)</div>\n        <input type=\"number\" style={styles.input} value={time} onChange={(e) => {\n          const newTime = +e.target.value * 1000\n          setAlarmTime(newTime)\n        }} />\n        <button style={styles.button} onClick={onSaveAlarmTime}>Save</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Setting\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\tpadding: 15,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tdistanceWrap: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n  input: {\n    fontSize: 30,\n    padding: 10,\n    margin: 20,\n    textAlign: 'center',\n    width: 100,\n  },\n\tlabel: {\n\t\tfontSize: 30,\n\t},\n  button: {\n    fontSize: 20,\n  },\n\tdistance: {\n\t\tfontSize: 100\n\t},\n\tunit: {\n\t\tfontSize: 30,\n\t},\n\ttimer: {\n\t\tmarginTop: 30,\n\t\tfontSize: 35,\n\t\tmarginBottom: 30,\n\t}\n};\n","import { useEffect, useState, useCallback } from 'react'\n\nconst serviceUUID = '52cf0b2c-28f2-4328-aaac-6badc36777d4'\nconst characteristicUUID = '051f540c-9a37-4284-9f98-2073e9f5bdfe'\n// const characteristicUUID2 = 'ec14304a-1796-4e20-b170-7f24492a5aca'\nconst bleName = 'Arrow_ESP32'\n\n// const maxThreshold =  70 / 2.54 // 70 cm\n// const minThreshold =  50 / 2.54 // 50 cm\n\n// const cmToInch = (cm) => {\n//   return cm / 2.54\n// }\n\n// const mockLogs = [{\n//   distance: 100.0,\n//   time: 4000\n// }, {\n//   distance: 100.0,\n//   time: 4000\n// }, {\n//   distance: 120.0,\n//   time: 4100\n// }]\n\nconst useBle = () => {\n  // const interval = useRef(null)\n  // const [isScanning, setIsScanning] = useState(true)\n  const [isConnected, setIsConnected] = useState(false)\n  const [distance, setDistance] = useState(0)\n  // const [maxDistance, setMaxDistance] = useState(0)\n  const [time, setTime] = useState(0)\n  // const [isReset, setIsReset] = useState(false)\n  const [logs, setLogs] = useState([])\n  // const [isStarting, setIsStarting] = useState(false)\n  const [state, setState] = useState(0)\n  const [alarmTime, setAlarmTime] = useState(0)\n\n  useEffect(() => {\n    const savedLogs = localStorage.getItem('logs')\n    const oldLogs = savedLogs ? JSON.parse(savedLogs) : []\n    setLogs(oldLogs)\n    // setLogs(mockLogs)\n  }, [])\n\n  // const setToggleTimer = useCallback(() => {\n  //   setIsStarting(starting => {\n  //     if (starting) {\n  //       setLogs((prevLogs) => {\n  //         const newLogs = [...prevLogs, {\n  //           distance: maxDistance,\n  //           time,\n  //         }]\n  //         localStorage.setItem('logs', JSON.stringify(newLogs))\n  //         return newLogs\n  //       })\n  //       setIsReset(false)\n  //       setMaxDistance(0)\n  //       setTime(0)\n  //     } else {\n  //       setIsReset(true)\n  //     }\n  //     return !starting\n  //   })\n  // }, [maxDistance, time])\n\n  const clearLogs = useCallback(() => {\n    setLogs([])\n    localStorage.removeItem('logs')\n  }, [])\n\n  // const reset = useCallback(() => {\n  //   setLogs((prevLogs) => {\n  //     const newLogs = [...prevLogs, {\n  //       distance: maxDistance,\n  //       time,\n  //     }]\n  //     localStorage.setItem('logs', JSON.stringify(newLogs))\n  //     return newLogs\n  //   })\n  //   setIsReset(false)\n  //   setIsReset(true)\n  //   setMaxDistance(0)\n  //   setTime(0)\n  // }, [time, maxDistance])\n\n  const scanAndConnect = useCallback(() => {\n    navigator.bluetooth.requestDevice({\n      filters: [{\n        name: bleName\n      }],\n      optionalServices: [serviceUUID]\n    })\n    .then(device => {\n      console.log({ device })\n      device.addEventListener('gattserverdisconnected', (event) => {\n        const device = event.target;\n        setIsConnected(false)\n        console.log(`Device ${device.name} is disconnected.`)\n      })\n      return device.gatt.connect();\n    })\n    .then((server) => {\n      console.log({ server })\n      setIsConnected(server.connected)\n      return server.getPrimaryService(serviceUUID)\n    })\n    .then((service) => {\n      console.log({ service })\n      return service.getCharacteristic(characteristicUUID)\n    })\n    .then((characteristic) => {\n      console.log({ characteristic })\n      return characteristic.startNotifications()\n    })\n    .then(characteristic => {\n      characteristic.addEventListener('characteristicvaluechanged', (event) => {\n        const value = event.target.value\n        const decoder = new TextDecoder('utf-8')\n        /*\n          state 0 = show distance only\n          state 1 = show distance & time\n          state 2 = show latest distance & time\n\n          time => ms\n          distance => inch\n        */\n        const [state, distance, time] = decoder.decode(value).split(',')\n        const distanceInch = +distance\n        const timeN = +time\n        const stateN = +state\n        setDistance(distanceInch)\n        setTime(timeN)\n        setState(stateN)\n        if (stateN === 2) {\n          setLogs((prevLogs) => {\n            const newLogs = [...prevLogs, {\n              distance: distanceInch,\n              time: timeN,\n            }]\n            localStorage.setItem('logs', JSON.stringify(newLogs))\n            return newLogs\n          })\n        }\n        // if (isReset === 'true') {\n        //   alert('reset')\n        //   reset()\n        // }\n      });\n      console.log('Notifications have been started.');\n    })\n    .catch(error => { console.error(error); });\n  }, [])\n\n  // useEffect(() => {\n  //   if (isReset) {\n  //     interval.current =  setInterval(() => {\n  //       setTime(time => time + 1)\n  //     }, 1000)\n  //   }\n  //   return () => clearInterval(interval.current)\n  // }, [isReset])\n\n  // useEffect(() => {\n  //   setMaxDistance((prevMax) => {\n  //     // if (distance >= minThreshold && distance <= maxThreshold) {\n  //       if (distance > prevMax) {\n  //         return distance\n  //       }\n  //     // }\n  //     return prevMax\n  //   })\n  // }, [distance])\n\n  const onSaveAlarmTime = () => {\n    navigator.bluetooth.requestDevice({\n      filters: [{\n        name: bleName\n      }],\n      optionalServices: [serviceUUID]\n    })\n    .then(device => {\n      console.log({ device })\n      device.addEventListener('gattserverdisconnected', (event) => {\n        const device = event.target;\n        setIsConnected(false)\n        console.log(`Device ${device.name} is disconnected.`)\n      })\n      return device.gatt.connect();\n    })\n    .then((server) => {\n      console.log({ server })\n      setIsConnected(server.connected)\n      return server.getPrimaryService(serviceUUID)\n    })\n    .then((service) => {\n      console.log({ service })\n      return service.getCharacteristic(characteristicUUID)\n    })\n    .then(characteristic => {\n      if (alarmTime >= 0) {\n        const aTime = alarmTime.toString();\n        const encoder = new TextEncoder('utf-8')\n        // characteristic.writeValue(aTime);\n        characteristic.writeValue(encoder.encode(aTime));\n        alert('Saved !!!')\n      } else {\n        alert('Time is not valid !!!')\n      }\n    })\n    .catch(error => { console.error(error); });\n  }\n\n  // return { distance, time, logs, isConnected, scanAndConnect, reset, clearLogs, setToggleTimer, isStarting, state }\n  return { distance, time, logs, isConnected, scanAndConnect, clearLogs, state, alarmTime, setAlarmTime, onSaveAlarmTime }\n}\n\nexport default useBle\n","import { useState, useMemo } from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport Logs from './components/Logs'\nimport Setting from './components/Setting'\nimport useBle from './hooks/useBle'\n\n// const isScanning = false\n// const distance = 100\n// const time = 90\n// const data = [\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n// ]\n\nfunction App() {\n  // const { distance, time, logs: data, isConnected, scanAndConnect, clearLogs, isStarting, setToggleTimer } = useBle()\n  const { distance, time, logs: data, isConnected, scanAndConnect, clearLogs, state, alarmTime, setAlarmTime, onSaveAlarmTime } = useBle()\n  const [tabKey, setTabKey] = useState('home') // home, logs, setting\n    const tabs = useMemo(() => ({\n      home: {\n        component: Home,\n        props: { distance, time, state },\n      },\n      logs: {\n        component: Logs,\n        props: { data, clearLogs }\n      },\n      setting: {\n        component: Setting,\n        props: { alarmTime, setAlarmTime, onSaveAlarmTime }\n      }\n    }), [data, distance, time, clearLogs, state, alarmTime, setAlarmTime, onSaveAlarmTime])\n    const Comp = tabs[tabKey].component\n    const props = tabs[tabKey].props\n\n    return (\n      <div style={styles.container}>\n        <div style={styles.status}>\n          <div style={styles.scanningdiv}>{isConnected ? 'Connected' : 'Disconnected'}</div>\n          {/* <button style={styles.button} onClick={reset}>Reset</button> */}\n          <button style={styles.button} onClick={scanAndConnect}>Scan and Connect</button>\n        </div>\n        <div style={styles.content}>\n          <Comp {...props} />\n        </div>\n        <div style={styles.tabs}>\n          <div style={{...styles.tab, ...{ borderRightWidth: 1, borderRightColor: '#d0d0d0' }}} onClick={() => setTabKey('home')}>\n            <div style={tabKey === 'home' ? styles.activeLabel : styles.inactiveLabel}>Home</div>\n          </div>\n          <div style={styles.tab} onClick={() => setTabKey('logs')}>\n            <div style={tabKey === 'logs' ? styles.activeLabel : styles.inactiveLabel}>Logs</div>\n          </div>\n          <div style={styles.tab} onClick={() => setTabKey('setting')}>\n            <div style={tabKey === 'setting' ? styles.activeLabel : styles.inactiveLabel}>Setting</div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    minHeight: '100vh',\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    paddingTop: 50,\n    backgroundColor: '#F5F5DC',\n    height: '100%',\n  },\n  tabs: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'fixed',\n    letf: 0,\n    right: 0,\n    width: '100%',\n    bottom: 0,\n    borderTop: '1px solid #d0d0d0',\n  },\n  tab: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f1f1f1',\n  },\n  activeLabel: {\n    display: 'flex',\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  inactiveLabel: {\n    display: 'flex',\n    color: '#444444',\n  },\n  scanningText: {\n    display: 'flex',\n    fontSize: 30\n  },\n  status: {\n    backgroundColor: 'black',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: 20,\n  },\n  button: {\n\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}