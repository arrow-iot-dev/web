{"version":3,"sources":["components/Home.js","components/Logs.js","components/Setting.js","hooks/useBle.js","App.js","reportWebVitals.js","index.js"],"names":["Home","distance","time","state","timer","useMemo","style","styles","container","distanceWrap","label","toFixed","unit","display","flexDirection","flex","padding","title","fontSize","alignItems","justifyContent","marginTop","marginBottom","FlatList","data","keyExtractor","renderItem","map","item","index","key","Logs","clearLogs","names","setNames","selectedName","setSelectedName","useState","value","setValue","dayjs","format","date","setDate","list","filter","name","dateTime","isSame","type","onChange","e","target","onClick","newValue","localStorage","setItem","JSON","stringify","nameRow","activeTag","tag","cursor","n","window","confirm","text","log","join","content","encodedUri","encodeURI","open","listItem","th","number","toString","sTime","paddingBottom","paddingTop","fontWeight","divAlign","border","backgroundColor","width","gap","Setting","alarmTime","setAlarmTime","onSaveAlarmTime","input","newTime","button","margin","textAlign","serviceUUID","characteristicUUID","bleName","useBle","isConnected","setIsConnected","setDistance","setTime","logs","setLogs","setState","useEffect","savedLogs","getItem","oldLogs","parse","savedNames","oldNames","useCallback","removeItem","scanAndConnect","navigator","bluetooth","requestDevice","filters","optionalServices","then","device","console","addEventListener","event","gatt","connect","server","connected","getPrimaryService","service","getCharacteristic","characteristic","startNotifications","TextDecoder","decode","split","distanceInch","timeN","stateN","prevLogs","newLogs","Date","catch","error","aTime","encoder","TextEncoder","writeValue","encode","alert","App","tabKey","setTabKey","tabs","home","component","props","setting","Comp","status","scanningdiv","tab","borderRightWidth","borderRightColor","activeLabel","inactiveLabel","minHeight","height","position","letf","right","bottom","borderTop","color","scanningText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69e0e497.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\n\nconst Home = ({ distance = 0, time = 0, state = 0 }) => {\n\tconst timer = useMemo(() => {\n\t\tconst sTime = time / 1000\n\t\t// const s = (sTime % 60).toString().padStart(2, '0')\n\t\t// const m = Math.floor(sTime / 60).toString().padStart(2, '0')\n\t\t// return `${m}:${s}`\n\t\treturn `${sTime}`\n\t}, [time])\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.distanceWrap}>\n\t\t\t\t<div style={styles.label}>Distance</div>\n\t\t\t\t<div style={styles.distance}>{(distance || 0).toFixed(2)}</div>\n\t\t\t\t<div style={styles.unit}>Inches</div>\n\t\t\t\t{\n\t\t\t\t\tstate > 0 && (\n\t\t\t\t\t\t<div style={styles.timer}>Timer: {timer}s</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Home\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\tpadding: 15,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tdistanceWrap: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tlabel: {\n\t\tfontSize: 30,\n\t},\n\tdistance: {\n\t\tfontSize: 100\n\t},\n\tunit: {\n\t\tfontSize: 30,\n\t},\n\ttimer: {\n\t\tmarginTop: 30,\n\t\tfontSize: 35,\n\t\tmarginBottom: 30,\n\t}\n};\n","import React, { useState } from 'react'\nimport dayjs from 'dayjs'\n\nconst FlatList = ({ data, keyExtractor, renderItem}) => {\n\treturn (\n\t\t<div>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tconst key = keyExtractor(item, index)\n\t\t\t\treturn (\n\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t{renderItem({ item, index })}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nconst Logs = ({ data = [], clearLogs, names, setNames, selectedName, setSelectedName }) => {\n\tconst [value, setValue] = useState('')\n\tconst [date, setDate] = useState(dayjs().format('YYYY-MM-DD'))\n\n\tconst list = data.filter((item) => item.name === selectedName && dayjs(item.dateTime).isSame(date, 'date'))\n\n\tconst onClear = () => {\n\t\tconst answer = window.confirm('Are you sure to clear all logs')\n\t\tif (answer) {\n\t\t\tclearLogs()\n\t\t}\n\t}\n\tconst onExport = () => {\n\t\tconst columns = 'No.,Distance(in.),Time(sec.),Name,Date Time'\n\t\tconst text = [columns, ...list.map((log, index) => `${index + 1},${(log.distance || 0).toFixed(2)},${log.time / 1000},${log.name},${log.dateTime}`)].join('\\n')\n\t\tconst content = `data:text/csv;charset=utf-8,${text}`\n\t\tconst encodedUri = encodeURI(content)\n\t\twindow.open(encodedUri)\n\t}\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={{ marginBottom: 10}}>\n\t\t\t\t<input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n\t\t\t</div>\n\t\t\t<div style={{ marginBottom: 10}}>\n\t\t\t\t<input value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t\t<button onClick={() => {\n\t\t\t\t\tsetNames(names => {\n\t\t\t\t\t\tconst newValue = [...names, value]\n\t\t\t\t\t\tlocalStorage.setItem('names', JSON.stringify(newValue))\n\t\t\t\t\t\treturn newValue\n\t\t\t\t\t})\n\t\t\t\t\tsetValue('')\n\t\t\t\t}}>+ Add</button>\n\t\t\t</div>\n\t\t\t<div style={styles.nameRow}>\n\t\t\t\t{names.map((name) =>\n\t\t\t\t\t<div style={name === selectedName ? styles.activeTag : styles.tag}>\n\t\t\t\t\t\t<span onClick={() => setSelectedName(name)}>{name}</span>\n\t\t\t\t\t\t<span style={{ cursor: 'pointer'}} onClick={() => {\n\t\t\t\t\t\t\tsetNames(names => {\n\t\t\t\t\t\t\t\tconst newValue = names.filter(n => n !== name)\n\t\t\t\t\t\t\t\tlocalStorage.setItem('names', JSON.stringify(newValue))\n\t\t\t\t\t\t\t\treturn newValue\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}>X</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t<button onClick={onClear}>Clear</button>\n\t\t\t\t<button onClick={onExport}>Export</button>\n\t\t\t</div>\n\t\t\t<div style={styles.listItem}>\n\t\t\t\t<div style={{...styles.th, ...styles.number}}>No.</div>\n\t\t\t\t<div style={{...styles.th, ...styles.distance}}>Distance (in.)</div>\n\t\t\t\t<div style={{...styles.th, ...styles.time}}>Time (sec.)</div>\n\t\t\t</div>\n\t\t\t<FlatList\n\t\t\t\tdata={list}\n\t\t\t\tkeyExtractor={(item, index) => index.toString()}\n\t\t\t\trenderItem={({ item, index }) => {\n\t\t\t\t\tconst sTime = item.time / 1000\n\t\t\t\t\t// const s = (sTime % 60).toString().padStart(2, '0')\n\t\t\t\t\t// const m = Math.floor(sTime / 60).toString().padStart(2, '0')\n\t\t\t\t\t// const timer = `${m}:${s}`\n\t\t\t\t\tconst timer = `${sTime}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div style={styles.listItem}>\n\t\t\t\t\t\t\t<div style={styles.number}>#{index + 1}</div>\n\t\t\t\t\t\t\t<div style={styles.distance}>{(item.distance || 0).toFixed(2)}</div>\n\t\t\t\t\t\t\t<div style={styles.time}>{timer}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Logs\n\nconst styles = {\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 15,\n    paddingBottom: 100,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tlistItem: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tpaddingTop: 5,\n\t\tpaddingBottom: 5,\n\t},\n\tth: {\n\t\tfontWeight: 'bold'\n\t},\n\tnumber: {\n\t\tflex: 1,\n\t\tfontSize: 20,\n\t},\n\tdistance: {\n\t\tflex: 3,\n\t\tdivAlign: 'right',\n\t\tfontSize: 20,\n\t},\n\ttime: {\n\t\tflex: 3,\n\t\tdivAlign: 'right',\n\t\tfontSize: 20,\n\t},\n\ttag: {\n\t\tborder: '1px solid #d0d0d0',\n\t\tbackgroundColor: '#fff',\n\t\tpadding: 5,\n\t\twidth: 'fit-content',\n\t\tdisplay: 'flex',\n\t\tgap: 3,\n\t},\n\tactiveTag: {\n\t\tborder: '3px solid lime',\n\t\tbackgroundColor: '#d0d0d0',\n\t\tpadding: 5,\n\t\twidth: 'fit-content',\n\t\tdisplay: 'flex',\n\t\tgap: 3,\n\t},\n\tnameRow: {\n\t\tdisplay: 'flex',\n\t\tgap: 5,\n\t}\n}\n","import React, { useMemo } from 'react'\n\nconst Setting = ({ alarmTime, setAlarmTime, onSaveAlarmTime }) => {\n  const time = useMemo(() => {\n    return alarmTime / 1000\n  }, [alarmTime])\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.distanceWrap}>\n        <div style={styles.label}>Set Alarm Time (sec)</div>\n        <input type=\"number\" style={styles.input} value={time} onChange={(e) => {\n          const newTime = +e.target.value * 1000\n          setAlarmTime(newTime)\n        }} />\n        <button style={styles.button} onClick={onSaveAlarmTime}>Save</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Setting\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\tpadding: 15,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tdistanceWrap: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n  input: {\n    fontSize: 30,\n    padding: 10,\n    margin: 20,\n    textAlign: 'center',\n    width: 100,\n  },\n\tlabel: {\n\t\tfontSize: 30,\n\t},\n  button: {\n    fontSize: 20,\n  },\n\tdistance: {\n\t\tfontSize: 100\n\t},\n\tunit: {\n\t\tfontSize: 30,\n\t},\n\ttimer: {\n\t\tmarginTop: 30,\n\t\tfontSize: 35,\n\t\tmarginBottom: 30,\n\t}\n};\n","import { useEffect, useState, useCallback } from 'react'\n\nconst serviceUUID = '52cf0b2c-28f2-4328-aaac-6badc36777d4'\nconst characteristicUUID = '051f540c-9a37-4284-9f98-2073e9f5bdfe'\n// const characteristicUUID2 = 'ec14304a-1796-4e20-b170-7f24492a5aca'\nconst bleName = 'Arrow_ESP32'\n\n// const maxThreshold =  70 / 2.54 // 70 cm\n// const minThreshold =  50 / 2.54 // 50 cm\n\n// const cmToInch = (cm) => {\n//   return cm / 2.54\n// }\n\n// const mockLogs = [{\n//   distance: 100.0,\n//   time: 4000,\n//   dateTime: new Date(),\n//   name: 'Ping'\n// }, {\n//   distance: 100.0,\n//   time: 4000,\n//   dateTime: new Date(),\n//   name: 'Joe',\n// }, {\n//   distance: 120.0,\n//   time: 4100,\n//   dateTime: new Date(),\n//   name: 'Jame',\n// }]\n\nconst useBle = () => {\n  // const interval = useRef(null)\n  // const [isScanning, setIsScanning] = useState(true)\n  const [isConnected, setIsConnected] = useState(false)\n  const [distance, setDistance] = useState(0)\n  // const [maxDistance, setMaxDistance] = useState(0)\n  const [time, setTime] = useState(0)\n  // const [isReset, setIsReset] = useState(false)\n  const [logs, setLogs] = useState([])\n  // const [isStarting, setIsStarting] = useState(false)\n  const [state, setState] = useState(0)\n  const [alarmTime, setAlarmTime] = useState(0)\n  const [names, setNames] = useState([])\n  const [selectedName, setSelectedName] = useState()\n\n  useEffect(() => {\n    const savedLogs = localStorage.getItem('logs')\n    const oldLogs = savedLogs ? JSON.parse(savedLogs) : []\n    setLogs(oldLogs)\n    // setLogs(mockLogs)\n\n    const savedNames = localStorage.getItem('names')\n    const oldNames = savedNames ? JSON.parse(savedNames) : ['NoName']\n    setNames(oldNames)\n    setSelectedName(oldNames?.[0])\n  }, [])\n\n  // const setToggleTimer = useCallback(() => {\n  //   setIsStarting(starting => {\n  //     if (starting) {\n  //       setLogs((prevLogs) => {\n  //         const newLogs = [...prevLogs, {\n  //           distance: maxDistance,\n  //           time,\n  //         }]\n  //         localStorage.setItem('logs', JSON.stringify(newLogs))\n  //         return newLogs\n  //       })\n  //       setIsReset(false)\n  //       setMaxDistance(0)\n  //       setTime(0)\n  //     } else {\n  //       setIsReset(true)\n  //     }\n  //     return !starting\n  //   })\n  // }, [maxDistance, time])\n\n  const clearLogs = useCallback(() => {\n    setLogs([])\n    localStorage.removeItem('logs')\n  }, [])\n\n  // const reset = useCallback(() => {\n  //   setLogs((prevLogs) => {\n  //     const newLogs = [...prevLogs, {\n  //       distance: maxDistance,\n  //       time,\n  //     }]\n  //     localStorage.setItem('logs', JSON.stringify(newLogs))\n  //     return newLogs\n  //   })\n  //   setIsReset(false)\n  //   setIsReset(true)\n  //   setMaxDistance(0)\n  //   setTime(0)\n  // }, [time, maxDistance])\n\n  const scanAndConnect = useCallback(() => {\n    navigator.bluetooth.requestDevice({\n      filters: [{\n        name: bleName\n      }],\n      optionalServices: [serviceUUID]\n    })\n    .then(device => {\n      console.log({ device })\n      device.addEventListener('gattserverdisconnected', (event) => {\n        const device = event.target;\n        setIsConnected(false)\n        console.log(`Device ${device.name} is disconnected.`)\n      })\n      return device.gatt.connect();\n    })\n    .then((server) => {\n      console.log({ server })\n      setIsConnected(server.connected)\n      return server.getPrimaryService(serviceUUID)\n    })\n    .then((service) => {\n      console.log({ service })\n      return service.getCharacteristic(characteristicUUID)\n    })\n    .then((characteristic) => {\n      console.log({ characteristic })\n      return characteristic.startNotifications()\n    })\n    .then(characteristic => {\n      characteristic.addEventListener('characteristicvaluechanged', (event) => {\n        const value = event.target.value\n        const decoder = new TextDecoder('utf-8')\n        /*\n          state 0 = show distance only\n          state 1 = show distance & time\n          state 2 = show latest distance & time\n\n          time => ms\n          distance => inch\n        */\n        const [state, distance, time] = decoder.decode(value).split(',')\n        const distanceInch = +distance\n        const timeN = +time\n        const stateN = +state\n        setDistance(distanceInch)\n        setTime(timeN)\n        setState(stateN)\n        if (stateN === 2) {\n          setLogs((prevLogs) => {\n            const newLogs = [...prevLogs, {\n              distance: distanceInch,\n              time: timeN,\n              dateTime: new Date(),\n              name: selectedName,\n            }]\n            localStorage.setItem('logs', JSON.stringify(newLogs))\n            return newLogs\n          })\n        }\n        // if (isReset === 'true') {\n        //   alert('reset')\n        //   reset()\n        // }\n      });\n      console.log('Notifications have been started.');\n    })\n    .catch(error => { console.error(error); });\n  }, [selectedName])\n\n  useEffect(() => {\n    if (selectedName) {\n      scanAndConnect()\n    }\n  }, [selectedName, scanAndConnect])\n\n  // useEffect(() => {\n  //   if (isReset) {\n  //     interval.current =  setInterval(() => {\n  //       setTime(time => time + 1)\n  //     }, 1000)\n  //   }\n  //   return () => clearInterval(interval.current)\n  // }, [isReset])\n\n  // useEffect(() => {\n  //   setMaxDistance((prevMax) => {\n  //     // if (distance >= minThreshold && distance <= maxThreshold) {\n  //       if (distance > prevMax) {\n  //         return distance\n  //       }\n  //     // }\n  //     return prevMax\n  //   })\n  // }, [distance])\n\n  const onSaveAlarmTime = () => {\n    navigator.bluetooth.requestDevice({\n      filters: [{\n        name: bleName\n      }],\n      optionalServices: [serviceUUID]\n    })\n    .then(device => {\n      console.log({ device })\n      device.addEventListener('gattserverdisconnected', (event) => {\n        const device = event.target;\n        setIsConnected(false)\n        console.log(`Device ${device.name} is disconnected.`)\n      })\n      return device.gatt.connect();\n    })\n    .then((server) => {\n      console.log({ server })\n      setIsConnected(server.connected)\n      return server.getPrimaryService(serviceUUID)\n    })\n    .then((service) => {\n      console.log({ service })\n      return service.getCharacteristic(characteristicUUID)\n    })\n    .then(characteristic => {\n      if (alarmTime >= 0) {\n        const aTime = alarmTime.toString();\n        const encoder = new TextEncoder('utf-8')\n        // characteristic.writeValue(aTime);\n        characteristic.writeValue(encoder.encode(aTime));\n        alert('Saved !!!')\n      } else {\n        alert('Time is not valid !!!')\n      }\n    })\n    .catch(error => { console.error(error); });\n  }\n\n  // return { distance, time, logs, isConnected, scanAndConnect, reset, clearLogs, setToggleTimer, isStarting, state }\n  return { distance, time, logs, isConnected, scanAndConnect, clearLogs, state, alarmTime, setAlarmTime, onSaveAlarmTime, names, selectedName, setNames, setSelectedName }\n}\n\nexport default useBle\n","import { useState, useMemo } from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport Logs from './components/Logs'\nimport Setting from './components/Setting'\nimport useBle from './hooks/useBle'\n\n// const isScanning = false\n// const distance = 100\n// const time = 90\n// const data = [\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n// ]\n\nfunction App() {\n  // const { distance, time, logs: data, isConnected, scanAndConnect, clearLogs, isStarting, setToggleTimer } = useBle()\n  const { distance, time, logs: data, isConnected, scanAndConnect, clearLogs, state, alarmTime, setAlarmTime, onSaveAlarmTime, names, selectedName, setNames, setSelectedName } = useBle()\n  const [tabKey, setTabKey] = useState('home') // home, logs, setting\n    const tabs = useMemo(() => ({\n      home: {\n        component: Home,\n        props: { distance, time, state },\n      },\n      logs: {\n        component: Logs,\n        props: { data, clearLogs, names, setNames, selectedName, setSelectedName }\n      },\n      setting: {\n        component: Setting,\n        props: { alarmTime, setAlarmTime, onSaveAlarmTime }\n      }\n    }), [data, distance, time, clearLogs, state, alarmTime, setAlarmTime, onSaveAlarmTime, names, setNames, selectedName, setSelectedName])\n    const Comp = tabs[tabKey].component\n    const props = tabs[tabKey].props\n\n    return (\n      <div style={styles.container}>\n        <div style={styles.status}>\n          <div style={styles.scanningdiv}>{isConnected ? 'Connected' : 'Disconnected'}</div>\n          {/* <button style={styles.button} onClick={reset}>Reset</button> */}\n          <button style={styles.button} onClick={scanAndConnect}>Scan and Connect</button>\n        </div>\n        <div style={styles.content}>\n          <Comp {...props} />\n        </div>\n        <div style={styles.tabs}>\n          <div style={{...styles.tab, ...{ borderRightWidth: 1, borderRightColor: '#d0d0d0' }}} onClick={() => setTabKey('home')}>\n            <div style={tabKey === 'home' ? styles.activeLabel : styles.inactiveLabel}>Home</div>\n          </div>\n          <div style={styles.tab} onClick={() => setTabKey('logs')}>\n            <div style={tabKey === 'logs' ? styles.activeLabel : styles.inactiveLabel}>Logs</div>\n          </div>\n          <div style={styles.tab} onClick={() => setTabKey('setting')}>\n            <div style={tabKey === 'setting' ? styles.activeLabel : styles.inactiveLabel}>Setting</div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    minHeight: '100vh',\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    // paddingTop: 50,\n    backgroundColor: '#F5F5DC',\n    height: '100%',\n  },\n  tabs: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'fixed',\n    letf: 0,\n    right: 0,\n    width: '100%',\n    bottom: 0,\n    borderTop: '1px solid #d0d0d0',\n  },\n  tab: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f1f1f1',\n  },\n  activeLabel: {\n    display: 'flex',\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  inactiveLabel: {\n    display: 'flex',\n    color: '#444444',\n  },\n  scanningText: {\n    display: 'flex',\n    fontSize: 30\n  },\n  status: {\n    backgroundColor: 'black',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: 20,\n  },\n  button: {\n\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}