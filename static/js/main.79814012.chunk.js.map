{"version":3,"sources":["components/Home.js","components/Logs.js","hooks/useBle.js","App.js","reportWebVitals.js","index.js"],"names":["Home","distance","time","s","toString","padStart","m","Math","floor","timer","style","styles","container","distanceWrap","label","unit","display","flexDirection","flex","padding","title","fontSize","alignItems","justifyContent","marginTop","FlatList","data","keyExtractor","renderItem","map","item","index","key","Logs","listItem","th","number","paddingTop","paddingBottom","fontWeight","divAlign","serviceUUID","useBle","interval","useRef","useState","isConnected","setIsConnected","setDistance","maxDistance","setMaxDistance","setTime","isReset","setIsReset","logs","setLogs","reset","useCallback","prevLogs","scanAndConnect","navigator","bluetooth","requestDevice","filters","name","optionalServices","then","device","console","log","addEventListener","event","target","gatt","connect","server","connected","getPrimaryService","service","getCharacteristic","characteristic","startNotifications","value","TextDecoder","decode","split","alert","catch","error","useEffect","current","setInterval","clearInterval","prevMax","App","tabKey","setTabKey","tabs","useMemo","home","component","props","Comp","status","scanningdiv","button","onClick","content","tab","borderRightWidth","borderRightColor","activeLabel","inactiveLabel","height","backgroundColor","position","letf","right","width","bottom","borderTop","color","scanningText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79814012.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = ({ distance = 0, time = 0 }) => {\n\tconst s = (time % 60).toString().padStart(2, '0')\n\tconst m = Math.floor(time / 60).toString().padStart(2, '0')\n\tconst timer = `${m}:${s}`\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.distanceWrap}>\n\t\t\t\t<div style={styles.label}>Distance</div>\n\t\t\t\t<div style={styles.distance}>{distance}</div>\n\t\t\t\t<div style={styles.unit}>centimeters</div>\n\t\t\t\t<div style={styles.timer}>Timer: {timer}s</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Home\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\tpadding: 15,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tdistanceWrap: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tlabel: {\n\t\tfontSize: 30,\n\t},\n\tdistance: {\n\t\tfontSize: 100\n\t},\n\tunit: {\n\t\tfontSize: 30,\n\t},\n\ttimer: {\n\t\tmarginTop: 30,\n\t\tfontSize: 35,\n\t}\n};\n","import React from 'react'\n\nconst FlatList = ({ data, keyExtractor, renderItem}) => {\n\treturn (\n\t\t<div>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tconst key = keyExtractor(item, index)\n\t\t\t\treturn (\n\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t{renderItem({ item, index })}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nconst Logs = ({ data = [] }) => {\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.listItem}>\n\t\t\t\t<div style={{...styles.th, ...styles.number}}>No.</div>\n\t\t\t\t<div style={{...styles.th, ...styles.distance}}>Distance (cm.)</div>\n\t\t\t\t<div style={{...styles.th, ...styles.time}}>Time (mm:ss)</div>\n\t\t\t</div>\n\t\t\t<FlatList\n\t\t\t\tdata={data}\n\t\t\t\tkeyExtractor={(item, index) => index.toString()}\n\t\t\t\trenderItem={({ item, index }) => {\n\t\t\t\t\tconst s = (item.time % 60).toString().padStart(2, '0')\n\t\t\t\t\tconst m = Math.floor(item.time / 60).toString().padStart(2, '0')\n\t\t\t\t\tconst timer = `${m}:${s}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div style={styles.listItem}>\n\t\t\t\t\t\t\t<div style={styles.number}>#{index}</div>\n\t\t\t\t\t\t\t<div style={styles.distance}>{item.distance}</div>\n\t\t\t\t\t\t\t<div style={styles.time}>{timer}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Logs\n\nconst styles = {\n\tcontainer: {\n\t\tflex: 1,\n\t\tpadding: 15,\n\t},\n  title: {\n\t\tfontSize: 24\n  },\n\tlistItem: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tpaddingTop: 5,\n\t\tpaddingBottom: 5,\n\t},\n\tth: {\n\t\tfontWeight: 'bold'\n\t},\n\tnumber: {\n\t\tflex: 1,\n\t\tfontSize: 20,\n\t},\n\tdistance: {\n\t\tflex: 3,\n\t\tdivAlign: 'right',\n\t\tfontSize: 20,\n\t},\n\ttime: {\n\t\tflex: 3,\n\t\tdivAlign: 'right',\n\t\tfontSize: 20,\n\t},\n}\n","import { useEffect, useState, useCallback, useRef } from 'react'\n\nconst serviceUUID = '52cf0b2c-28f2-4328-aaac-6badc36777d4'\nconst characteristicUUID = '051f540c-9a37-4284-9f98-2073e9f5bdfe'\nconst bleName = 'Arrow_ESP32'\n\nconst useBle = () => {\n  const interval = useRef(null)\n  // const [isScanning, setIsScanning] = useState(true)\n  const [isConnected, setIsConnected] = useState(false)\n  const [distance, setDistance] = useState(0)\n  const [maxDistance, setMaxDistance] = useState(0)\n  const [time, setTime] = useState(0)\n  const [isReset, setIsReset] = useState(false)\n  const [logs, setLogs] = useState([])\n\n  const reset = useCallback(() => {\n    setLogs((prevLogs) => {\n      return [...prevLogs, {\n        distance: maxDistance,\n        time,\n      }]\n    })\n    setIsReset(false)\n    setIsReset(true)\n    setMaxDistance(0)\n    setTime(0)\n  }, [time, maxDistance])\n\n  const scanAndConnect = useCallback(() => {\n    navigator.bluetooth.requestDevice({\n      filters: [{\n        name: bleName\n      }],\n      optionalServices: [serviceUUID]\n    })\n    .then(device => {\n      console.log({ device })\n      device.addEventListener('gattserverdisconnected', (event) => {\n        const device = event.target;\n        setIsConnected(false)\n        console.log(`Device ${device.name} is disconnected.`)\n      })\n      return device.gatt.connect();\n    })\n    .then((server) => {\n      console.log({ server })\n      setIsConnected(server.connected)\n      return server.getPrimaryService(serviceUUID)\n    })\n    .then((service) => {\n      console.log({ service })\n      return service.getCharacteristic(characteristicUUID)\n    })\n    .then((characteristic) => {\n      console.log({ characteristic })\n      return characteristic.startNotifications()\n    })\n    .then(characteristic => {\n      characteristic.addEventListener('characteristicvaluechanged', (event) => {\n        const value = event.target.value\n        const decoder = new TextDecoder('utf-8')\n        const [distance, isReset] = decoder.decode(value).split(',')\n        console.log({ distance, isReset })\n        setDistance(+distance)\n        if (isReset === 'true') {\n          alert('reset')\n          reset()\n        }\n      });\n      console.log('Notifications have been started.');\n    })\n    .catch(error => { console.error(error); });\n  }, [reset])\n\n  useEffect(() => {\n    if (isReset) {\n      interval.current =  setInterval(() => {\n        setTime(time => time + 1)\n      }, 1000)\n    }\n    return () => clearInterval(interval.current)\n  }, [isReset])\n\n  useEffect(() => {\n    setMaxDistance((prevMax) => {\n      if (distance > prevMax) {\n        return distance\n      }\n      return prevMax\n    })\n  }, [distance])\n\n  return { distance, time, logs, isConnected, scanAndConnect, reset }\n}\n\nexport default useBle\n","import { useState, useMemo } from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport Logs from './components/Logs'\nimport useBle from './hooks/useBle'\n\n// const isScanning = false\n// const distance = 100\n// const time = 90\n// const data = [\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n//   {\n//     distance: 100,\n//     time: 90,\n//   },\n// ]\n\nfunction App() {\n  const { distance, time, logs: data, isConnected, scanAndConnect, reset } = useBle()\n  const [tabKey, setTabKey] = useState('home') // home, logs\n    const tabs = useMemo(() => ({\n      home: {\n        component: Home,\n        props: { distance, time },\n      },\n      logs: {\n        component: Logs,\n        props: { data }\n      }\n    }), [data, distance, time])\n    const Comp = tabs[tabKey].component\n    const props = tabs[tabKey].props\n\n    return (\n      <div style={styles.container}>\n        <div style={styles.status}>\n          <div style={styles.scanningdiv}>{isConnected ? 'Connected' : 'Disconnected'}</div>\n          <button style={styles.button} onClick={reset}>Reset</button>\n          <button style={styles.button} onClick={scanAndConnect}>Scan and Connect</button>\n        </div>\n        <div style={styles.content}>\n          <Comp {...props} />\n        </div>\n        <div style={styles.tabs}>\n          <div style={{...styles.tab, ...{ borderRightWidth: 1, borderRightColor: '#d0d0d0' }}} onClick={() => setTabKey('home')}>\n            <div style={tabKey === 'home' ? styles.activeLabel : styles.inactiveLabel}>Home</div>\n          </div>\n          <div style={styles.tab} onClick={() => setTabKey('logs')}>\n            <div style={tabKey === 'logs' ? styles.activeLabel : styles.inactiveLabel}>Logs</div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    height: '100vh',\n  },\n  content: {\n    display: 'flex',\n    flex: 1,\n    paddingTop: 50,\n    backgroundColor: '#F5F5DC',\n    height: '100%',\n  },\n  tabs: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'absolute',\n    letf: 0,\n    right: 0,\n    width: '100%',\n    bottom: 0,\n    borderTop: '1px solid #d0d0d0',\n  },\n  tab: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f1f1f1',\n  },\n  activeLabel: {\n    display: 'flex',\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  inactiveLabel: {\n    display: 'flex',\n    color: '#444444',\n  },\n  scanningText: {\n    display: 'flex',\n    fontSize: 30\n  },\n  status: {\n    backgroundColor: 'black',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: 20,\n  },\n  button: {\n\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}